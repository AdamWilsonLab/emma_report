---
title: "Project Overview"
---


# Summary
The EMMA project is building new tools to monitor the health of shrubland ecosystems in near real-time. Focusing on the fire-prone Cape Floristic Region of South Africa—a biodiversity hotspot—our system combines satellite data, field observations, and modeling to track changes in vegetation, identify threats like fires or invasive species, and support better conservation decisions. In partnership with the South African Environmental Observation Network (SAEON), EMMA aims to provide reliable, up-to-date information that helps protect these critical landscapes.

```{r, echo=F, message=F,include=F, results="hide", eval=T}
#description: Modeling vegetation postfire recovery data


# load data saved in the pipeline
#tar_load(c(envdata, stan_data, model_results, spatial_outputs,model_prediction)) 
library(targets)
library(tidyverse)
library(sf)
library(terra)
library(leaflet)
library(forcats)

# need to include all necessary targets here otherwise they aren't dependencies with tar_quarto()
tar_load(protected_areas)
tar_load(park_fire_history)
tar_load(temp_directory)
tar_load(years_since_fire_raster)
tar_load(fires_wgs)
tar_load(most_recent_ndvi_raster)
tar_load(most_recent_ndvi_date)
tar_load(monthly_mean_ndvi_raster)
tar_load(monthly_delta_ndvi_raster)
tar_load(weather_data)
tar_load(report_qmd_dir) # forces park qmds to run first
  
```


# Regional Overview

```{r, echo=F, warning=F}
protected_areas_monthly_delta_ndvi <- extract(monthly_delta_ndvi_raster,protected_areas,fun=quantile,na.rm=T) |> 
  as_tibble() |> 
  select(-1) |> #drop the index
  rename("Q0"="NDVI","Q25"="NDVI.1","Q50"="NDVI.2","Q75"="NDVI.3","Q100"="NDVI.4") |> 
  bind_cols(name=protected_areas$name)

```

```{r, echo=F, warning=F}
protected_areas_monthly_delta_ndvi |> 
  #gather(quantile,value,-name) |> 
  ggplot(aes(xmin=Q25,xmax=Q75,x=Q50,y=name))+
    geom_errorbarh()

```

```{r, echo=F, warning=F}
years_since_fire <- extract(years_since_fire_raster,protected_areas,fun=quantile,na.rm=T) |> 
  as_tibble() |> 
  select(-1) |> #drop the index
  rename("Q0"="lyr.1","Q25"="lyr.1.1","Q50"="lyr.1.2","Q75"="lyr.1.3","Q100"="lyr.1.4") |> 
  bind_cols(name=protected_areas$name)

```
# Stand Age distributions
```{r, echo=F}
years_since_fire |> 
  filter(!is.na(Q50)) |> 
  mutate(name = fct_reorder(as.factor(name), Q50)) |> 
  ggplot(aes(y = name)) +
    # Full range (min to max)
    geom_segment(aes(x = Q0, xend = Q100, yend = name), color = "grey70", linewidth = .5) +
    # Interquartile range (Q25 to Q75)
    geom_segment(aes(x = Q25, xend = Q75, yend = name), color = "grey40", linewidth = 1) +
    # Median point
    geom_point(aes(x = Q50), size = 2, color = "black") +
    labs(
      x = "Years Since Fire",
      y = NULL,
      title = "Distribution of Time Since Fire by Site",
      subtitle = "Showing full range (Q0–Q100), IQR (Q25–Q75), and median (Q50)"
    ) 

```


```{r, echo=F}
  base_url <- "https://adamwilsonlab.github.io/emma_report/reports/"
  base_url <- "reports/" #keep relative paths?
  
    reports <- 
  data.frame(report = list.files("reports/")) %>%
    mutate(url = paste(base_url,gsub(pattern = ".qmd",replacement = ".html",x = report),sep = ""),
           park_name = gsub(pattern = "report.",replacement = "",x = report),
           park_name = gsub(pattern = ".html",replacement = "",x = park_name),
           park_name = gsub(pattern = ".qmd",replacement = "",x = park_name),
           park_name = gsub(pattern = "_",replacement = " ",x = park_name)) %>%
      mutate(
          park = glue::glue("[{park_name}]({url})"),
          park = map(park, gt::md))
  
  protected_areas <-
  protected_areas %>%
    st_as_sf() |> 
    inner_join(y = reports,
               by = c("name"="park_name"))%>% 
    st_transform(crs = st_crs(4326))%>% 
   mutate(tag = paste0("Park: <a href=", url,">",name , "</a>"))

  bbox <- st_bbox(protected_areas) %>%
  as.vector()


```
# Park-level Summaries

Click on a park below to view park specific reports.

```{r park_map, fig.width = 10, fig.height = 7, echo = FALSE, warning = FALSE, message = FALSE}


  leaflet(data = protected_areas) %>%
    addProviderTiles(providers$Esri.WorldImagery, group = "World Imagery") %>%
    addProviderTiles("Esri.NatGeoWorldMap", group = "NatGeo") %>%
    #addProviderTiles("NASAGIBS.ModisTerraTrueColorCR", group = "True Colors") %>%
  addPolygons(color = "black",
              stroke = TRUE,
              fill = TRUE,
              group = "Park",
              popup = ~tag) %>%
  addLayersControl(
    baseGroups = c("NatGeo","World Imagery"),
    options = layersControlOptions(collapsed = FALSE),position = "topright") %>%
  fitBounds(bbox[1], bbox[2], bbox[3], bbox[4])

```

# Data Overview

See table below for dates each dataset was last updated and download links.

```{r, echo=F, results='asis'}
# build table of dates when products were last updated

dates <- bind_rows(
  data.frame(Description = "Website", Date = format(now(), "%Y-%b-%d")),
  data.frame(Description = "NDVI", Date = format(most_recent_ndvi_date, "%Y-%b-%d")),
  data.frame(Description = "Weather", Date = format(max(weather_data$YEARMODA), "%Y-%b-%d"))
) |> 
  select(Description, "Date last updated"=Date)

knitr::kable(dates)
 
```
